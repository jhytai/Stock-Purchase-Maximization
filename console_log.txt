
# Stock Purchase Maximation Problem Solver #

Number of companies, N = 4
Quantity of stocks (s) and their total value (v) for each company:
  1 2   4 3   3 6   6 7  
Amount available for investment, M = 12

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 38 microseconds.
  Maximum number of stocks: 11

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 18.1 microseconds.
  Maximum number of stocks: 11


Number of companies, N = 4
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   6 7  
Amount available for investment, M = 10

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 35.7 microseconds.
  Maximum number of stocks: 12

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 18.1 microseconds.
  Maximum number of stocks: 12


Number of companies, N = 1
Quantity of stocks (s) and their total value (v) for each company:
  3 5  
Amount available for investment, M = 6

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 9.8 microseconds.
  Maximum number of stocks: 3

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 9.5 microseconds.
  Maximum number of stocks: 3


Number of companies, N = 2
Quantity of stocks (s) and their total value (v) for each company:
  3 4   4 5  
Amount available for investment, M = 6

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 9.7 microseconds.
  Maximum number of stocks: 4

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 8.9 microseconds.
  Maximum number of stocks: 4


Number of companies, N = 3
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   6 7  
Amount available for investment, M = 8

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 12.6 microseconds.
  Maximum number of stocks: 7

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 9.3 microseconds.
  Maximum number of stocks: 7


Number of companies, N = 4
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   6 7  
Amount available for investment, M = 9

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 21.2 microseconds.
  Maximum number of stocks: 12

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 9.7 microseconds.
  Maximum number of stocks: 12


Number of companies, N = 5
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   6 7   4 4  
Amount available for investment, M = 15

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 42.6 microseconds.
  Maximum number of stocks: 18

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 11.2 microseconds.
  Maximum number of stocks: 18


Number of companies, N = 6
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   5 3   6 7   4 4  
Amount available for investment, M = 12

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 76.7 microseconds.
  Maximum number of stocks: 17

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 11.3 microseconds.
  Maximum number of stocks: 17


Number of companies, N = 8
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   5 3   6 7   4 4   7 7   5 2  
Amount available for investment, M = 16

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 411.3 microseconds.
  Maximum number of stocks: 23

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 15.1 microseconds.
  Maximum number of stocks: 23


Number of companies, N = 10
Quantity of stocks (s) and their total value (v) for each company:
  3 2   4 3   5 3   5 3   6 7   4 4   7 7   5 2   1 1   2 2  
Amount available for investment, M = 20

  Exhaustive Search approach.
  Time complexity: O(2^n)
  Time taken by the algorithm: 1929.6 microseconds.
  Maximum number of stocks: 29

  Dynamic Programming approach.
  Time complexity: O(n*M) where M is the amount available for investment
  Time taken by the algorithm: 18.4 microseconds.
  Maximum number of stocks: 29


Program ended...

